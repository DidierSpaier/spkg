OUTDATED!!!

source code guide
-----------------
  sql.{c,h}: Simplified sqlite3 interface with better error handling.

  Supported error handling methods:
    - close db and exit
    - longjmp to the caller's error handler
    - print err msg and return (retval = -1)
    - ignore error and return (retval = -1)

  untgz.{c,h}: Extractor/browser for tgz archives.
  
  sys.{c,h}: Simplified system interface.
    - check file type
    - implementation of rm -rf and mkdir -p
    
  pkgdb.{c,h}: Interface to the package database.
    - routines to modify spkg database
    - routines to convert between legacy and spkg databases

  --------------------------------
  |         cli frontend         |
  --------------------------------
                  |
  --------------------------------
  |         pkgtools api         |
  --------------------------------
         |                |
  ---------------         |
  |  pkgdb api  |         |
  ---------------         |
         |                |
  ---------------  ---------------
  |   sql api   |  |  untgz api  |
  ---------------  ---------------
         |                |
  ---------------  ---------------
  |   sqlite3   |  |     zlib    |
  ---------------  ---------------

pkg_install
-----------
 - check umask 022 and setuid 0
 - check if package exist in db
 - init ta
 - for each file in archive:
   - extract package description
   - extract doinst.sh symbolic links
   - check all tgz files for overwriting (including links)
   - extract file
   - add it to a transaction

 - create symbolic links
 - update package database
 - finalize transaction
 - run ldconfig
 - run doinst.sh
 - cleanup install/doinst.sh and slack-*

upgradepkg
----------

removepkg
---------
 - check if file is not used by other packages
 - init ta
 - remove it (to temp dir)
 - updatedb

checkpkg
--------
 - check if files on disk match files in database
/** @page pyspkg Python Bindings

This page gives some basic examples on how to access spkg
database using Python.

<h2>How to extract tgz archive using untgz library?</h2>

@code
#!/usr/bin/env python
from sys import argv, exc_info, path
path.append('../build/lib.linux-i686-2.4')
from spkg import *

def status(tgz, total, current):
  print "status:[%s] %s (%u of %u)" % (tgz.tgzfile,tgz.f_name,current,total)

# For each file do:
for file in argv[1:]:
  try:
    # Open tgz file.
    tgz = Untgz(file, status)
    # While we can successfully get next file's header from the archive...
    while tgz.get_header():
      # ...we will be extracting that file to a disk using its original name.
      tgz.write_file()
  except:
    # if error occured, show it
    print exc_info()[1]
    print 'FAILED!'
  else:
    print 'OK!'
@endcode

<h2>How to access spkg and legacy databases using pkgdb library?</h2>

@code
#!/usr/bin/env python
from spkg import *

def pp(p):
    print '%s (%s) c=%ukB, u=%ukB' % (p.shortname, p.version, p.csize, p.usize)

if __name__ == '__main__':
    db_open()
    print 'Listing legacy database:'
    pkgs = db_legacy_get_packages()
    for p in pkgs:
        pp(p)

    print 'Listing spkg database:'
    pkgs = db_get_packages()
    for p in pkgs:
        pp(p)

    pkgs = 0
    p = 0
    db_close()
@endcode

<h2>More help please!</h2>
Ok, you may use standard python help and if you are still not sure 
what to do look at the bindings source code.

@code
#!/usr/bin/env python
import spkg
help(spkg)
@endcode

*/

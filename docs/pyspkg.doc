/** @page pyspkg Python Bindings

This page gives some basic examples on how to access spkg
database using Python.

<h2>How to extract tgz archive using untgz library?</h2>

<h3>With status callback:</h3>
@code
#!/usr/bin/env python
from sys import argv, exc_info, path
from spkg import *

def status(tgz, total, current):
  print "[%s] extracting %s (%u of %u)..." % (tgz.tgzfile,tgz.f_name,current,total)

# For each file do:
for file in argv[1:]:
  try:
    # Open tgz file.
    tgz = Untgz(file, status)
    # While we can successfully get next file's header from the archive...
    while tgz.get_header():
      if tgz.f_name == 'install/slack-desc':
        # ...we will be extracting that file to a disk using its original name.
        print tgz.write_data()
      else:
        # ...we will be extracting that file to a disk using its original name.
        tgz.write_file()
  except:
    # if error occured, show it
    print exc_info()[1]
    print 'FAILED!'
  else:
    print 'OK!'
@endcode

<h3>Without status callback:</h3>
@code
#!/usr/bin/env python
from sys import argv, exc_info, path
from spkg import *

for file in argv[1:]:
    try:
        tgz = Untgz(file)
        while tgz.get_header(): tgz.write_file()
    except:
        print exc_info()[1]
@endcode


<h2>How to access spkg and legacy databases using pkgdb library?</h2>

@code
#!/usr/bin/env python
from sys import argv, exc_info, path
from spkg import *

def print_package(p):
    print '%s (%s) c=%ukB, u=%ukB' % (p.shortname, p.version, p.csize, p.usize)

db_open()

print 'Listing legacy database:'
pkgs = db_legacy_get_packages()
for p in pkgs: print_package(p)

print 'Listing spkg database:'
pkgs = db_get_packages()
for p in pkgs: print_package(p)

db_close()
@endcode

<h2>More help please!</h2>
Ok, you may use standard python help and if you are still not sure 
what to do look at the bindings source code.

@code
#!/usr/bin/env python
import spkg
help(spkg)
@endcode

*/
